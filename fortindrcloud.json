{
    "appid": "bb31bf87-e183-44e8-b641-a2006252517b",
    "name": "FortiNDR Cloud Application for Splunk SOAR",
    "description": "This app allows the use of the information provided by the FortiNDR Cloud Service to perform containment and investigative actions on Splunk SOAR",
    "type": "generic",
    "product_vendor": "Fortinet Inc.",
    "logo": "fortindrcloud.svg",
    "logo_dark": "fortindrcloud_dark.svg",
    "product_name": "FortiNDR Cloud",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "Fortinet Inc.",
    "contributors": [
        {
          "name": "Eduardo Mesa Barrameda"
        }
      ],
    "license": "Copyright (c) 2018-2023 Fortinet Inc.",
    "app_version": "1.0.0",
    "utctime_updated": "2023-05-12T16:47:48.154912Z",
    "package_name": "phantom_fortindrcloud",
    "main_module": "fortindrcloud_connector.py",
    "min_phantom_version": "5.5.0",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "api_key": {
            "name": "api_key",
            "data_type": "password",
            "required": true,
            "description": "API Token to connect to FortiNDR Cloud RESTful APIs",
            "order": 0
        },
        "api_base_url": {
            "name": "api_base_url",
            "data_type": "string",
            "default": "https://<API>-<Region>.<Domain>/",
            "required": true,
            "description": "Provide the Base URL to access the APIs by replacing the <Region> and <Domain> in https://<API>-<Region>.<Domain>/ with the appropriate value",
            "order": 1
        },
        "first_poll": {
            "data_type": "string",
            "order": 2,
            "description": "First Poll (<number> <time unit>, e.g., 12 hours, 7 days)",
            "required": false,
            "default": "7 days",
            "name": "first_poll"
        },
        "polling_delay": {
            "data_type": "numeric",
            "order": 4,
            "description": "Polling delay in minute. This is required to allow time for the detections to be added before polling them",
            "default": 10,
            "required": false,
            "name": "polling_delay"
        },
        "account_uuid": {
            "data_type": "string",
            "order": 6,
            "description": "Account UUID to filter retrieved detections",
            "required": false,
            "name": "account_uuid"
        },
        "muted": {
            "data_type": "boolean",
            "order": 3,
            "description": "Set to true to include muted detections. Default to false",
            "name": "muted",
            "id": 0,
            "default": false
        },
        "muted_rule": {
            "data_type": "boolean",
            "order": 5,
            "description": "Set to true to include muted rules. Default to false",
            "name": "muted_rule",
            "id": 0,
            "default": false
        },
        "muted_device": {
            "data_type": "boolean",
            "order": 7,
            "description": "Set to true to include muted devices. Default to false",
            "name": "muted_device",
            "id": 0,
            "default": false
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "on poll",
            "identifier": "on_poll",
            "description": "Retrieve latest Detections from the FortiNDR Cloud Service",
            "type": "ingest",
            "read_only": true,
            "parameters": {
                "start_time": {
                    "description": "First Poll (<number> <time unit>, e.g., 12 hours, 7 days)",
                    "data_type": "string",
                    "order": 0,
                    "name": "start_time"
                },
                "end_time": {
                    "description": "Parameter Ignored in this app",
                    "data_type": "numeric",
                    "order": 1,
                    "name": "end_time"
                },
                "container_id": {
                    "description": "Parameter Ignored in this app",
                    "data_type": "numeric",
                    "order": 2,
                    "name": "container_id"
                },
                "container_count": {
                    "description": "Parameter Ignored in this app",
                    "data_type": "numeric",
                    "order": 3,
                    "name": "container_count"
                },
                "artifact_count": {
                    "description": "Parameter Ignored in this app",
                    "data_type": "numeric",
                    "order": 4,
                    "name": "artifact_count"
                }
            },
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "get sensors",
            "identifier": "fnc_get_sensors",
            "description": "Get a list of all sensors",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "account_uuid": {
                    "description": "UUID of account to filter by",
                    "data_type": "string"
                },
                "account_code": {
                    "description": "Account code to filter by",
                    "data_type": "string"
                },
                "sensor_id": {
                    "description": "ID of the sensor to filter by",
                    "data_type": "string"
                },
                "include": {
                    "description": "Include additional metadata such as status, interfaces, admin.sensor, admin.zeek, admin.suricata, and network_usage",
                    "data_type": "string",
                    "allow_list": true
                },
                "enabled": {
                    "description": "Filter by true or false. If not provided, all the sensors are returned",
                    "data_type": "boolean"
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Sensors retrieved successfully."
                    ]
                },
                {
                    "data_path": "action_result.data.*.sensors.*.created",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Created"
                },
                {
                    "data_path": "action_result.data.*.sensors.*.updated",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Updated"
                },
                {
                    "data_path": "action_result.data.*.sensors.*.sensor_id",
                    "data_type": "string",
                    "example_values": [
                       "sen1"
                    ],
                    "column_name": "Sensor ID"
                },
                {
                    "data_path": "action_result.data.*.sensors.*.account_code",
                    "data_type": "string",
                    "example_values": [
                       "gig"
                    ],
                    "column_name": "Account Code"
                },
                {
                    "data_path": "action_result.data.*.sensors.*.location",
                    "data_type": "string",
                    "example_values": [
                        "{ \"latitude\": 0, \"longitude\": 0 }"
                    ],
                    "column_name": "Location"
                },
                {
                    "data_path": "action_result.data.*.sensors.*.subdivison",
                    "data_type": "string",
                    "example_values": [
                        "USA"
                    ],
                    "column_name": "Subdivision"
                },
                {
                    "data_path": "action_result.data.*.sensors.*.city",
                    "data_type": "string",
                    "example_values": [
                        "San Jose"
                    ],
                    "column_name": "City"
                },
                {
                    "data_path": "action_result.data.*.sensors.*.country",
                    "data_type": "string",
                    "example_values": [
                        "USA"
                    ],
                    "column_name": "Country"
                },
                {
                    "data_path": "action_result.data.*.sensors.*.tags",
                    "data_type": "string",
                    "example_values": [
                        "Demo Sensor"
                    ],
                    "column_name": "Tags"
                },
                {
                    "data_path": "action_result.data.*.sensors.*.pcap_enabled",
                    "data_type": "boolean",
                    "example_values": [
                        "true","false"
                    ],
                    "column_name": "PCAP Enabled"
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "title": "FortiNDR Cloud Get Sensors"
            },
             "versions": "EQ(*)"
        },
        {
            "action": "get devices",
            "identifier": "fnc_get_devices",
            "description": "Get a list of all devices",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "start_date": {
                    "description": "Filter devices based on when they were seen",
                    "data_type": "string"
                },
                "end_date": {
                    "description": "Filter devices based on when they were seen",
                    "data_type": "string"
                },
                "cidr": {
                    "description": "Filter devices that are under a specific CIDR",
                    "data_type": "string"
                },
                "sensor_id": {
                    "description": "Filter devices that were observed by a specific sensor",
                    "data_type": "string"
                },
                "traffic_direction": {
                    "description": "Filter devices that have been noted to only have a certain directionality of traffic (\"external\" vs \"internal\")",
                    "data_type": "string",
                    "value_list": ["internal","external"]
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Devices retrieved successfully."
                    ]
                },
                {
                    "data_path": "action_result.data.*.devices.*.date",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Date",
                    "description": "Date when the device was first seen"
                },
                {
                    "data_path": "action_result.data.*.devices.*.external",
                    "data_type": "boolean",
                    "example_values": [
                        "true","false"
                    ],
                    "column_name": "External",
                    "description": "If external traffic has been observed for this device"
                },
                {
                    "data_path": "action_result.data.*.devices.*.internal",
                    "data_type": "boolean",
                    "example_values": [
                        "true","false"
                    ],
                    "column_name": "Internal",
                    "description": "If internal traffic has been observed for this device"
                },
                {
                    "data_path": "action_result.data.*.devices.*.ip_address",
                    "data_type": "string",
                    "example_values": [
                        "8.8.8.8"
                    ],
                    "column_name": "IP Address",
                    "description": "IP address of the device"
                }
            ],
            "render": {
                "type": "table",
                "width": 4,
                "title": "FortiNDR Get Devices"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "get tasks",
            "identifier": "fnc_get_tasks",
            "description": "Get a list of all the PCAP tasks",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "task_uuid": {
                    "description": "Filter to a specific task",
                    "data_type": "string",
                    "required": false
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Tasks retrieved successfully."
                    ]
                },
                {
                    "data_path": "action_result.data.*.tasks.*.task_uuid",
                    "data_type": "string",
                    "example_values": [
                        "32329e78-c51f-4da4-bd56-6bfb35d84a9c"
                    ],
                    "column_name": "Task UUID",
                    "description": "Unique ID of the task"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.actual_start_time",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Start Time",
                    "description": "Date when the task actually started"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.requested_start_time",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Requested Start Time",
                    "description": "Requested date for the task start"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.updated_email",
                    "data_type": "string",
                    "column_name": "Updated Email",
                    "example_values": [
                       "test@test.com"
                    ],
                    "description": "Email address of the user that updated the task"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.created_uuid",
                    "data_type": "string",
                    "example_values": [
                        "32329e78-c51f-4da4-bd56-6bfb35d84a9c"
                    ],
                    "column_name": "Creator UUID",
                    "description": "Unique ID of the user that created the task"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.created",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Created",
                    "description": "Date when the task was created"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.name",
                    "data_type": "string",
                    "example_values": [
                       "Meh-Ike phone 10001"
                    ],
                    "column_name": "Name",
                    "description": "Name of the task"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.status",
                    "data_type": "string",
                    "example_values": [
                       "inactive"
                    ],
                    "column_name": "Status",
                    "description": "Current status of the task"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.created_email",
                    "data_type": "string",
                    "example_values": [
                       "test@test.com"
                    ],
                    "column_name": "Creator Email",
                    "description": "Email address of the user that created the task"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.updated_uuid",
                    "data_type": "string",
                    "example_values": [
                        "32329e78-c51f-4da4-bd56-6bfb35d84a9c"
                    ],
                    "column_name": "Updated UUID",
                    "description": "Unique ID of the user that updated the task"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.bpf",
                    "data_type": "string",
                    "example_values": [
                        "src host x.x.x.x and dst port 10001"
                    ],
                    "column_name": "BPF",
                    "description": "Berkeley Packet Filter for the task"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.actual_end_time",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "End Time",
                    "description": "Date when the task actually ended"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.account_code",
                    "data_type": "string",
                    "example_values": [
                        "gig"
                    ],
                    "column_name": "Account Code",
                    "description": "ID code of the customer account"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.requested_end_time",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Requested End Time",
                    "description": "Requested date for the task to end"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.updated",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Updated",
                    "description": "Sensors this task is running on"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.description",
                    "data_type": "string",
                    "column_name": "Description",
                    "description": "Description of the task"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.has_files",
                    "data_type": "boolean",
                    "example_values": [
                       "true","false"
                    ],
                    "column_name": "Has Files",
                    "description": "If this task has files (true/false)"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.sensor_ids",
                    "data_type": "string",
                    "example_values": [
                       "[\"sen1\"]"
                    ],
                    "column_name": "Sensor IDs",
                    "description": "Sensors this task is running on"
                },
                {
                    "data_path": "action_result.data.*.tasks.*.files",
                    "data_type": "string",
                    "column_name": "Files",
                    "description": "Files captured for this task"
                }
            ],
            "render": {
                "type": "table",
                "width": 19,
                "title": "FortiNDR Get Tasks"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "create task",
            "identifier": "fnc_create_task",
            "description": "Create a new PCAP task",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "name": {
                    "data_type": "string",
                    "description": "The name of the task",
                    "required": true
                },
                "account_uuid": {
                    "data_type": "string",
                    "description": "Account where the task will be created",
                    "required": true
                },
                "description": {
                    "data_type": "string",
                    "description": "A description for the task",
                    "required": true
                },
                "bpf": {
                    "data_type": "string",
                    "description": "The Berkeley Packet Filter for capture filtering",
                    "required": true
                },
                "requested_start_date": {
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "description": "The date the task will become active. (2019-01-30T00:00:00.000Z)",
                    "required": true
                },
                "requested_end_date": {
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "description": "The date the task will become inactive. (2019-12-31T23:59:59.000Z)",
                    "required": true
                },
                "sensor_ids": {
                    "data_type": "string",
                    "description": " List of sensor IDs, separated by ',', on which this task will run (separate multiple accounts by comma)",
                    "allow_list": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Detection Rule created successfully"
                    ]
                },
                {
                    "data_path": "action_result.data.*.task.task_uuid",
                    "data_type": "string",
                    "example_values": [
                        "32329e78-c51f-4da4-bd56-6bfb35d84a9c"
                    ],
                    "column_name": "Task UUID",
                    "description": "Unique ID of the task"
                },
                {
                    "data_path": "action_result.data.*.task.description",
                    "data_type": "string",
                    "column_name": "Description",
                    "description": "Description of the task"
                },
                {
                    "data_path": "action_result.data.*.task.name",
                    "data_type": "string",
                    "example_values": [
                       "Meh-Ike phone 10001"
                    ],
                    "column_name": "Name",
                    "description": "Name of the task"
                },
                {
                    "data_path": "action_result.data.*.task.sensor_ids",
                    "data_type": "string",
                    "example_values": [
                       "[\"sen1\"]"
                    ],
                    "column_name": "Sensor IDs",
                    "description": "Sensors this task is running on"
                },
                {
                    "data_path": "action_result.data.*.task.account_code",
                    "data_type": "string",
                    "example_values": [
                        "gig"
                    ],
                    "column_name": "Account Code",
                    "description": "ID code of the customer account"
                },
                {
                    "data_path": "action_result.data.*.task.bpf",
                    "data_type": "string",
                    "example_values": [
                        "src host x.x.x.x and dst port 10001"
                    ],
                    "column_name": "BPF",
                    "description": "Berkeley Packet Filter for the task"
                },
                {
                    "data_path": "action_result.data.*.task.created_uuid",
                    "data_type": "string",
                    "example_values": [
                        "32329e78-c51f-4da4-bd56-6bfb35d84a9c"
                    ],
                    "column_name": "Creator UUID",
                    "description": "Unique ID of the user that created the task"
                },
                {
                    "data_path": "action_result.data.*.task.updated_uuid",
                    "data_type": "string",
                    "example_values": [
                        "32329e78-c51f-4da4-bd56-6bfb35d84a9c"
                    ],
                    "column_name": "Updated UUID",
                    "description": "Unique ID of the user that updated the task"
                },
                {
                    "data_path": "action_result.data.*.task.created_email",
                    "data_type": "string",
                    "example_values": [
                       "test@test.com"
                    ],
                    "column_name": "Creator Email",
                    "description": "Email address of the user that created the task"
                },
                {
                    "data_path": "action_result.data.*.task.updated_email",
                    "data_type": "string",
                    "column_name": "Updated Email",
                    "example_values": [
                       "test@test.com"
                    ],
                    "description": "Email address of the user that updated the task"
                },
                {
                    "data_path": "action_result.data.*.task.created",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Created",
                    "description": "Date when the task was created"
                },
                {
                    "data_path": "action_result.data.*.task.updated",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Updated",
                    "description": "Sensors this task is running on"
                },
                {
                    "data_path": "action_result.data.*.task.requested_start_time",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Requested Start Time",
                    "description": "Requested date for the task start"
                },
                {
                    "data_path": "action_result.data.*.task.requested_end_time",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Requested End Time",
                    "description": "Requested date for the task to end"
                },
                {
                    "data_path": "action_result.data.*.task.actual_start_time",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Start Time",
                    "description": "Date when the task actually started"
                },
                {
                    "data_path": "action_result.data.*.task.actual_end_time",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "End Time",
                    "description": "Date when the task actually ended"
                },
                {
                    "data_path": "action_result.data.*.task.status",
                    "data_type": "string",
                    "example_values": [
                       "inactive"
                    ],
                    "column_name": "Status",
                    "description": "Current status of the task"
                },
                {
                    "data_path": "action_result.data.*.task.files",
                    "data_type": "string",
                    "column_name": "Files",
                    "description": "Files captured for this task"
                },
                {
                    "data_path": "action_result.data.*.task.has_files",
                    "data_type": "boolean",
                    "example_values": [
                       "true","false"
                    ],
                    "column_name": "Has Files",
                    "description": "If this task has files (true/false)"
                }
            ],
            "render": {
                "type": "table",
                "width": 0,
                "title": "FortiNDR Create Task"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "get telemetry events",
            "identifier": "fnc_get_telemetry_events",
            "description": "Get event telemetry data grouped by time",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "interval": {
                    "description": "Interval to group by: hour (default) or day",
                    "data_type": "string",
                    "value_list": ["hour", "day"],
                    "default": "hour",
                    "required": false
                },
                "start_date": {
                    "description": "Start date/time to query for. The default is 1 day ago for interval=hour or 30 days ago for interval=day",
                    "data_type": "string",
                    "required": false
                },
                "end_date": {
                    "description": "End date/time to query for. The default is the current time",
                    "data_type": "string",
                    "required": false
                },
                "account_uuid": {
                    "description": "Account uuid to filter by",
                    "data_type": "string",
                    "required": false
                },
                "account_code": {
                    "description": "Account code to filter by",
                    "data_type": "string",
                    "required": false
                },
                "sensor_id": {
                    "description": "Sensor id to filter by",
                    "data_type": "string",
                    "required": false
                },
                "event_type": {
                    "description": "The type of event",
                    "data_type": "string",
                    "required": false
                },
                "group_by": {
                    "description": "Optionally group results by: sensor_id, event_type",
                    "data_type": "string",
                    "value_list": ["sensor_id", "event_type","account_code"],
                    "required": false
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Telemetry events retrieved successfully."
                    ]
                },
                {
                    "data_path": "action_result.data.*.telemetry_events.*.timestamp",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Timestamp",
                    "description": "Timestamp of the grouped data"
                },
                {
                    "data_path": "action_result.data.*.telemetry_events.*.event_count",
                    "data_type": "numeric",
                    "example_values": [
                       "1000"
                    ],
                    "column_name": "Event Count",
                    "description": "Number of events"
                },
                {
                    "data_path": "action_result.data.*.telemetry_events.*.sensor_id",
                    "data_type": "string",
                    "example_values": [
                       "sen1"
                    ],
                    "column_name": "Sensor ID",
                    "description": "Sensor name (if grouped by sensor_id)"
                },
                {
                    "data_path": "action_result.data.*.telemetry_events.*.event_type",
                    "data_type": "string",
                    "example_values": [
                       "flow"
                    ],
                    "column_name": "Event Type",
                    "description": "Type of event (if grouped by event_type)"
                },
                {
                    "data_path": "action_result.data.*.telemetry_events.*.account_code",
                    "data_type": "string",
                    "example_values": [
                       "act"
                    ],
                    "column_name": "Account Code",
                    "description": "Account Code (if grouped by account_code)"
                }
            ],
            "render": {
                "type": "table",
                "width": 5,
                "title": "FortiNDR Get Events Telemetry"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "get telemetry packetstats",
            "identifier": "fnc_get_telemetry_packetstats",
            "description": "Get packetstats telemetry data grouped by time",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "interval": {
                    "description": "Aggregation interval. default by hour if not specified",
                    "data_type": "string",
                    "default": "h",
                    "required": false
                },
                "start_date": {
                    "description": "Scopes the returned metrics to dates after the given start_date. If empty returns most current packet stats",
                    "data_type": "string",
                    "required": false
                },
                "end_date": {
                    "description": "Scopes the returned metrics to dates before the given end_date. If empty returns most current packet stats",
                    "data_type": "string",
                    "required": false
                },
                "account_code": {
                    "description": "Account code to filter by",
                    "data_type": "string",
                    "required": false
                },
                "sensor_id": {
                    "description": "Scopes the returned metrics to the interfaces of the specified sensor ID",
                    "data_type": "string",
                    "required": false
                },
                "group_by": {
                    "description": "Option to group by the following fields: interface_name, sensor_id, account_code",
                    "data_type": "string",
                    "value_list": ["interface_name", "sensor_id", "account_code"],
                    "required": false
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Telemetry packet stats retrieved successfully."
                    ]
                },
                {
                    "data_path": "action_result.data.*.telemetry_packetstats.*.account_code",
                    "data_type": "string",
                    "example_values": [
                       "gig"
                    ],
                    "column_name": "Account Code",
                    "description": "Account code the data was filtered by"
                },
                {
                    "data_path": "action_result.data.*.telemetry_packetstats.*.timestamp",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Timestamp",
                    "description": "Timestamp of the grouped data"
                },
                {
                    "data_path": "action_result.data.*.telemetry_packetstats.*.interface_name",
                    "data_type": "string",
                    "column_name": "Interface Name",
                    "description": "Interface the packet data was recorded from"
                },
                {
                    "data_path": "action_result.data.*.telemetry_packetstats.*.rx_bits_per_second",
                    "data_type": "numeric",
                    "example_values": [
                       "168359035095"
                    ],
                    "column_name": "RX Bits Per Second",
                    "description": "Received throughput (bits per second)"
                },
                {
                    "data_path": "action_result.data.*.telemetry_packetstats.*.rx_bytes",
                    "data_type": "numeric",
                    "example_values": [
                       "1044065401242303200"
                    ],
                    "column_name": "RX Bytes",
                    "description": "Received data size (bytes)"
                },
                {
                    "data_path": "action_result.data.*.telemetry_packetstats.*.rx_errors",
                    "data_type": "numeric",
                    "example_values": [
                       "543523121859"
                    ],
                    "column_name": "RX Errors",
                    "description": "Number of received errors"
                },
                {
                    "data_path": "action_result.data.*.telemetry_packetstats.*.rx_packets",
                    "data_type": "numeric",
                    "example_values": [
                       "1511658249026538"
                    ],
                    "column_name": "RX Packets",
                    "description": "Number of received packets"
                },
                {
                    "data_path": "action_result.data.*.telemetry_packetstats.*.sensor_id",
                    "data_type": "string",
                    "example_values": [
                       "sen1"
                    ],
                    "column_name": "Sensor ID",
                    "description": "Sensor ID packet data was recorded from"
                },
                {
                    "data_path": "action_result.data.*.telemetry_packetstats.*.tx_bytes",
                    "data_type": "numeric",
                    "example_values": [
                       "1380372603073006"
                    ],
                    "column_name": "TX Bytes",
                    "description": "Transmitted data size (bytes)"
                },
                {
                    "data_path": "action_result.data.*.telemetry_packetstats.*.tx_errors",
                    "data_type": "numeric",
                    "example_values": [
                       "0"
                    ],
                    "column_name": "TX Errors",
                    "description": "Number of transmitted errors"
                },
                {
                    "data_path": "action_result.data.*.telemetry_packetstats.*.tx_packets",
                    "data_type": "numeric",
                    "example_values": [
                       "963173536282"
                    ],
                    "column_name": "TX Packets",
                    "description": "Number of transmitted packets"
                }
            ],
            "render": {
                "type": "table",
                "width": 11,
                "title": "FortiNDR Get Packetstats Telemetry"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "get telemetry network",
            "identifier": "fnc_get_telemetry_network",
            "description": "Get network telemetry data grouped by time",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "account_code": {
                    "description": "Account code to filter by",
                    "data_type": "string",
                    "required": false
                },
                "interval": {
                    "description": "The interval to filter by (day, month_to_day)",
                    "data_type": "string",
                    "value_list": ["day", "month_to_day"],
                    "required": false
                },
                "latest_each_month": {
                    "description": "Filters out all but the latest day and month_to_date for each month",
                    "data_type": "boolean",
                    "required": false
                },
                "sort_order": {
                    "description": "Sorts by account code first, then timestamp. asc or desc. The default is desc",
                    "data_type": "string",
                    "value_list": ["asc", "desc"],
                    "required": false
                },
                "limit": {
                    "description": "The maximum number of records to return, default: 100, max: 1000",
                    "data_type": "numeric",
                    "default": 100,
                    "required": false
                },
                "offset": {
                    "description": "The number of records to skip past. Default: 0",
                    "data_type": "numeric",
                    "default": 0,
                    "required": false
                },
                "start_date": {
                    "description": "Start date to filter by",
                    "data_type": "string",
                    "required": false
                },
                "end_date": {
                    "description": "End date to filter by",
                    "data_type": "string",
                    "required": false
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Telemetry network retrieved successfully"
                    ]
                },
                {
                    "data_path": "action_result.data.*.telemetry_network_usage.*.account_code",
                    "data_type": "string",
                    "example_values": [
                       "gig"
                    ],
                    "column_name": "Account Code",
                    "description": "The account code for the network usage"
                },
                {
                    "data_path": "action_result.data.*.telemetry_network_usage.*.percentile_bps",
                    "data_type": "numeric",
                    "example_values": [
                       "6050493542"
                    ],
                    "column_name": "Percentile BPS",
                    "description": "The top percentile BPS value across sensors"
                },
                {
                    "data_path": "action_result.data.*.telemetry_network_usage.*.percentile",
                    "data_type": "numeric",
                    "example_values": [
                       "95"
                    ],
                    "column_name": "Percentile",
                    "description": "Percentile of BPS records to calculate for percentile_bps"
                },
                {
                    "data_path": "action_result.data.*.telemetry_network_usage.*.interval",
                    "data_type": "string",
                    "example_values": [
                       "day"
                    ],
                    "column_name": "Interval",
                    "description": "Time span the calculation was performed over (day, month_to_day)"
                },
                {
                    "data_path": "action_result.data.*.telemetry_network_usage.*.timestamp",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Timestamp",
                    "description": "The date the calculation was performed until"
                }
            ],
            "render": {
                "type": "table",
                "width": 5,
                "title": "FortiNDR Get Network Telemetry"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "get entity summary",
            "identifier": "fnc_get_entity_summary",
            "description": "Get summary information about an IP or domain",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "entity": {
                    "description": "Entity name to retrieve summary information for",
                    "data_type": "string",
                    "required": true
                },
                "entity_type": {
                    "description": "Type of the entity we are searching. Allowed values are: ip, domain or file",
                    "data_type": "string",
                    "required": false
                },
                "account_uuid": {
                    "description": "Account uuid to filter by. If absent, all the caller's allowed accounts will be queried",
                    "data_type": "string",
                    "required": false
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Entity summary retrieved successfully"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entity_summary.entity",
                    "data_type": "string",
                    "example_values": [
                       "8.8.8.8"
                    ],
                    "column_name": "Entity"
                },
                {
                    "data_path": "action_result.data.*.entity_summary.first_seen",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "First Seen"
                },
                {
                    "data_path": "action_result.data.*.entity_summary.last_seen",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Last Seen"
                },
                {
                    "data_path": "action_result.data.*.entity_summary.prevalence_count_internal",
                    "data_type": "numeric",
                    "example_values": [
                       "8"
                    ],
                    "column_name": "Prevalence Count"
                },
                {
                    "data_path": "action_result.data.*.entity_summary.tags.*.text",
                    "data_type": "string",
                    "example_values": [
                       "external"
                    ],
                    "column_name": "Tag Text"
                },
                {
                    "data_path": "action_result.data.*.entity_summary.tags.*.account_code",
                    "data_type": "string",
                    "example_values": [
                       "act"
                    ],
                    "column_name": "Tag Account Code"
                },
                {
                    "data_path": "action_result.data.*.entity_summary.tags.*.user_uuid",
                    "data_type": "string",
                    "example_values": [
                       "dc9ab97f-9cdf-46af-8ca2-e71e8e8243c8"
                    ],
                    "column_name": "Tag User ID"
                },
                {
                    "data_path": "action_result.data.*.entity_summary.tags.*.create_date",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Tag Create Date"
                },
                {
                    "data_path": "action_result.data.*.entity_summary.tags.*.entity",
                    "data_type": "string",
                    "example_values": [
                       "8.8.8.8"
                    ],
                    "column_name": "Tag Entity"
                },
                {
                    "data_path": "action_result.data.*.entity_summary.tags.*.public",
                    "data_type": "boolean",
                    "column_name": "Public Tag"
                }
            ],
            "render": {
                "type": "table",
                "width": 10,
                "title": "FortiNDR Get Entity Summary"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "get entity pdns",
            "identifier": "fnc_get_entity_pdns",
            "description": "Get passive DNS information about an IP or domain",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "entity": {
                    "description": "IP or Domain to get passive DNS data for",
                    "data_type": "string",
                    "required": true
                },
                "record_type": {
                    "description": "Limit results to the specified DNS query type(s). Supported types are: A, AAAA, CNAME, MX, NS. Case insensitive",
                    "data_type": "string",
                    "allow_list": true
                },
                "source": {
                    "description": "Limit the results to the specified data source(s). Note that not all Sources populate all fields. Supported sources are: ICEBRG_DNS. Case insensitive",
                    "data_type": "string",
                    "allow_list": true
                },
                "resolve_external": {
                    "description": "When true, the service will query non-ICEBRG data sources. false by default",
                    "data_type": "boolean"
                },
                "start_date": {
                    "description": "The earliest date before which to exclude results. Day granularity, inclusive",
                    "data_type": "string"
                },
                "end_date": {
                    "description": "The latest date after which to exclude results. Day granularity, inclusive",
                    "data_type": "string"
                },
                "account_uuid": {
                    "description": "Limit results to the specified account UUID(s). Defaults to all accounts for which the user has permission",
                    "data_type": "string",
                    "allow_list": true
                },
                "limit": {
                    "description": "Maximum number of records to be returned. Default 1000",
                    "data_type": "numeric"
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Entity pdns retrieved successfully"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entity_pdns.account_uuid",
                    "data_type": "string",
                    "example_values": [
                       "dc9ab97f-9cdf-46af-8ca2-e71e8e8243c8"
                    ],
                    "column_name": "Account UUID"
                },
                {
                    "data_path": "action_result.data.*.entity_pdns.first_seen",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "First Seen"
                },
                {
                    "data_path": "action_result.data.*.entity_pdns.last_seen",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Last Seen"
                },
                {
                    "data_path": "action_result.data.*.entity_pdns.record_type",
                    "data_type": "string",
                    "example_values": [
                       "a"
                    ],
                    "column_name": "Record Type"
                },
                {
                    "data_path": "action_result.data.*.entity_pdns.resolved",
                    "data_type": "string",
                    "example_values": [
                       "8.8.8.8"
                    ],
                    "column_name": "Resolved"
                },
                {
                    "data_path": "action_result.data.*.entity_pdns.sensor_id",
                    "data_type": "string",
                    "example_values": [
                       "sen1"
                    ],
                    "column_name": "Sensor Id"
                },
                {
                    "data_path": "action_result.data.*.entity_pdns.customer_id",
                    "data_type": "string",
                    "example_values": [
                       "cust"
                    ],
                    "column_name": "Customer Id"
                },
                {
                    "data_path": "action_result.data.*.entity_pdns.source",
                    "data_type": "string",
                    "example_values": [
                       "icebrg_dns"
                    ],
                    "column_name": "Source"
                }
            ],
            "render": {
                "type": "table",
                "width": 8,
                "title": "FortiNDR Get Entity PDNS"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "get entity dhcp",
            "identifier": "fnc_get_entity_dhcp",
            "description": "Get DHCP information about an IP address",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "entity": {
                    "description": "IP to get DHCP data for",
                    "data_type": "string",
                    "required": true
                },
                "start_date": {
                    "description": "The earliest date before which to exclude results. Day granularity, inclusive",
                    "data_type": "string"
                },
                "end_date": {
                    "description": "The latest date after which to exclude results. Day granularity, inclusive",
                    "data_type": "string"
                },
                "account_uuid": {
                    "description": "Limit results to the specified account UUID(s). Defaults to all accounts for which the user has permission",
                    "data_type": "string",
                    "allow_list": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Entity dhcp retrieved successfully"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entity_dhcp.customer_id",
                    "data_type": "string",
                    "example_values": [
                       "gig"
                    ],
                    "column_name": "Account uuid"
                },
                {
                    "data_path": "action_result.data.*.entity_dhcp.hostnames",
                    "data_type": "string",
                    "example_values": [
                       "Somebody-iPhone"
                    ],
                    "column_name": "Hostnames"
                },
                {
                    "data_path": "action_result.data.*.entity_dhcp.ip",
                    "data_type": "string",
                    "example_values": [
                       "8.8.8.8"
                    ],
                    "column_name": "IP Address"
                },
                {
                    "data_path": "action_result.data.*.entity_dhcp.lease_start",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Lease Start"
                },
                {
                    "data_path": "action_result.data.*.entity_dhcp.lease_end",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Lease End"
                },
                {
                    "data_path": "action_result.data.*.entity_dhcp.mac",
                    "data_type": "string",
                    "example_values": [
                       "e3:84:2f:8e:50:e4"
                    ],
                    "column_name": "MAC Address"
                },
                {
                    "data_path": "action_result.data.*.entity_dhcp.sensor_id",
                    "data_type": "string",
                    "example_values": [
                       "sen1"
                    ],
                    "column_name": "Sensor Id"
                },
                {
                    "data_path": "action_result.data.*.entity_dhcp.start_lease_as_long",
                    "data_type": "numeric",
                    "example_values": [
                       "1618939557975"
                    ],
                    "column_name": "Start Lease as Long"
                }
            ],
            "render": {
                "type": "table",
                "width": 8,
                "title": "FortiNDR Get Entity DHCP"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "get entity file",
            "identifier": "fnc_get_entity_file",
            "description": "Get information about a file",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "hash": {
                    "description": "File hash. Can be an MD5, SHA1, or SHA256 hash of the file",
                    "data_type": "string",
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Entity file retrieved successfully."
                    ]
                },
                {
                    "data_path": "action_result.data.*.entity_file.entity",
                    "data_type": "string",
                    "example_values": [
                       "75ce20257379b1d8bd88f7bfb01c6a6e3a32221212c623fbf10de61e8c379ff8"
                    ],
                    "column_name": "Entity"
                },
                {
                    "data_path": "action_result.data.*.entity_file.sha1",
                    "data_type": "string",
                    "example_values": [
                       "8965f4209f82bb13e15172bdf672912eebc2132d"
                    ],
                    "column_name": "SHA1"
                },
                {
                    "data_path": "action_result.data.*.entity_file.sha256",
                    "data_type": "string",
                    "example_values": [
                       "75ce20257379b1d8bd88f7bfb01c6a6e3a32221212c623fbf10de61e8c379ff8"
                    ],
                    "column_name": "SHA256"
                },
                {
                    "data_path": "action_result.data.*.entity_file.md5",
                    "data_type": "string",
                    "example_values": [
                       "95fcad6ceaefd749aa23fc5476863bb4"
                    ],
                    "column_name": "MD5"
                },
                {
                    "data_path": "action_result.data.*.entity_file.customer_id",
                    "data_type": "string",
                    "example_values": [
                       "gig"
                    ],
                    "column_name": "Customer ID"
                },
                {
                    "data_path": "action_result.data.*.entity_file.names",
                    "data_type": "string",
                    "example_values": [
                       "[\"TIAgentSetup.exe\"]"
                    ],
                    "column_name": "File Names"
                },
                {
                    "data_path": "action_result.data.*.entity_file.mime_type",
                    "data_type": "string",
                    "example_values": [
                       "[\"application/x-dosexec\"]"
                    ],
                    "column_name": "Mime Type"
                },
                {
                    "data_path": "action_result.data.*.entity_file.first_seen",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "First Seen"
                },
                {
                    "data_path": "action_result.data.*.entity_file.last_seen",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Last Seen"
                },
                {
                    "data_path": "action_result.data.*.entity_file.bytes",
                    "data_type": "numeric",
                    "example_values": [
                       "0"
                    ],
                    "column_name": "Bytes"
                },
                {
                    "data_path": "action_result.data.*.entity_file.pe",
                    "data_type": "string",
                    "column_name": "Portable Executable"
                },
                {
                    "data_path": "action_result.data.*.entity_file.prevalence_count_internal",
                    "data_type": "numeric",
                    "example_values": [
                       "0"
                    ],
                    "column_name": "Prevalence Count"
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "title": "FortiNDR Get Entity File"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "get detections",
            "identifier": "fnc_get_detections",
            "description": "Get information about the detections",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "rule_uuid": {
                    "description": "Filter to a specific rule",
                    "data_type": "string"
                },
                "account_uuid": {
                    "description": "For those with access to multiple accounts, specify a single account to return results from",
                    "data_type": "string"
                },
                "status": {
                    "description": "Filter by detection status: active, resolved",
                    "data_type": "string",
                    "value_list": ["active","resolved"]
                },
                "device_ip": {
                    "description": "Device IP to filter by",
                    "data_type": "string"
                },
                "sensor_id": {
                    "description": "Sensor ID to filter by",
                    "data_type": "string"
                },
                "muted": {
                    "description": "List detections that a user muted: true / false",
                    "data_type": "boolean"
                },
                "muted_device": {
                    "description": "List detections for muted devices: true / false",
                    "data_type": "boolean"
                },
                "muted_rule": {
                    "description": "List detections for muted rules",
                    "data_type": "boolean"
                },
                "include": {
                    "description": "Include additional information in the response (i.e. 'rules,indicators' add the rules and the indicators to the response)",
                    "data_type": "string",
                    "allow_list": true,
                    "value_list": ["rules","indicators","rules,indicators"]
                },
                "sort_by": {
                    "description": "Field to sort by (first_seen, last_seen, status, device_ip, indicator_count)",
                    "data_type": "string",
                    "value_list": ["first_seen","last_seen","status","device_ip","indicator_count"]
                },
                "sort_order": {
                    "description": "Sort direction ('asc' vs 'desc')",
                    "data_type": "string",
                    "value_list": ["asc","desc"]
                },
                "offset": {
                    "description": "The number of records to skip past",
                    "data_type": "numeric"
                },
                "limit": {
                    "description": "The number of records to return, default: 100, max: 10000",
                    "data_type": "numeric",
                    "default": 100
                },
                "created_start_date": {
                    "description": "Created start date to filter by (inclusive)",
                    "data_type": "string"
                },
                "created_end_date": {
                    "description": "Created end date to filter by (exclusive)",
                    "data_type": "string"
                },
                "created_or_shared_start_date": {
                    "description": "Created or shared start date to filter by (inclusive)",
                    "data_type": "string"
                },
                "created_or_shared_end_date": {
                    "description": " Created or shared end date to filter by (exclusive)",
                    "data_type": "string"
                },
                "active_start_date": {
                    "description": "Active start date to filter by (inclusive)",
                    "data_type": "string"
                },
                "active_end_date": {
                    "description": "Active end date to filter by (exclusive)",
                    "data_type": "string"
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Detections retrieved successfully."
                    ]
                },
                {
                    "data_path": "action_result.data.*.detections.*.muted_rule",
                    "data_type": "boolean",
                    "example_values": [
                       "true",
                       "false"
                    ],
                    "column_name": "Muted Rule"
                },
                {
                    "data_path": "action_result.data.*.detections.*.created",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Created"
                },
                {
                    "data_path": "action_result.data.*.detections.*.account_uuid",
                    "data_type": "string",
                    "example_values": [
                       "1e5dbd92-9dca-4f36-bec5-c292172cbeaa"
                    ],
                    "column_name": "Account"
                },
                {
                    "data_path": "action_result.data.*.detections.*.resolution_timestamp",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Resolution"
                },
                {
                    "data_path": "action_result.data.*.detections.*.first_seen",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "First Seen"
                },
                {
                    "data_path": "action_result.data.*.detections.*.last_seen",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Last Seen"
                },
                {
                    "data_path": "action_result.data.*.detections.*.muted",
                    "data_type": "boolean",
                    "example_values": [
                       "true",
                       "false"
                    ],
                    "column_name": "Muted"
                },
                {
                    "data_path": "action_result.data.*.detections.*.resolution",
                    "data_type": "string",
                    "example_values": [
                       "auto_resolved"
                    ],
                    "column_name": "Resolution Type"
                },
                {
                    "data_path": "action_result.data.*.detections.*.muted_user_uuid",
                    "data_type": "string",
                    "example_values": [
                       "d025f073-c01e-4ee9-a89b-72f972a75a16"
                    ],
                    "column_name": "Muted by"
                },
                {
                    "data_path": "action_result.data.*.detections.*.resolution_user_uuid",
                    "data_type": "string",
                    "example_values": [
                       "b92cd6e0-dd24-4bee-838a-d0dfbeda621a"
                    ],
                    "column_name": "Resolved by"
                },
                {
                    "data_path": "action_result.data.*.detections.*.status",
                    "data_type": "string",
                    "example_values": [
                       "active", "resolved"
                    ],
                    "column_name": "Status"
                },
                {
                    "data_path": "action_result.data.*.detections.*.resolution_comment",
                    "data_type": "string",
                    "column_name": "Resolution Comment"
                },
                {
                    "data_path": "action_result.data.*.detections.*.muted_comment",
                    "data_type": "string",
                    "column_name": "Muted Comment"
                },
                {
                    "data_path": "action_result.data.*.detections.*.sensor_id",
                    "data_type": "string",
                    "example_values": [
                       "sen1"
                    ],
                    "column_name": "Sensor Id"
                },
                {
                    "data_path": "action_result.data.*.detections.*.rule_uuid",
                    "data_type": "string",
                    "example_values": [
                       "58c2e22d-8b64-43ac-89a2-6c82ce66935e"
                    ],
                    "column_name": "Rule Id"
                },
                {
                    "data_path": "action_result.data.*.detections.*.uuid",
                    "data_type": "string",
                    "example_values": [
                       "cf576032-2f42-4b3e-90be-3c51e5128b03"
                    ],
                    "column_name": "Detection Id"
                },
                {
                    "data_path": "action_result.data.*.detections.*.muted_device_uuid",
                    "data_type": "string",
                    "example_values": [
                        "55f39b72-2622-4137-9051-bc2ff364f059"
                    ],
                    "column_name": "Muted Device Id"
                },
                {
                    "data_path": "action_result.data.*.detections.*.updated",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Updated"
                },
                {
                    "data_path": "action_result.data.*.detections.*.device_ip",
                    "data_type": "string",
                    "example_values": [
                       "10.70.43.58"
                    ],
                    "column_name": "Device IP"
                }
            ],
            "render": {
                "type": "table",
                "width": 19,
                "title": "FortiNDR Get Detections"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "get detection rules",
            "identifier": "fnc_get_detection_rules",
            "description": "Get a list of detection rules",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "account_uuid": {
                    "description": "For those with access to multiple accounts, specify a single account to return results from",
                    "data_type": "string"
                },
                "search": {
                    "description": "Filter name or category",
                    "data_type": "string"
                },
                "has_detections": {
                    "description": "Include rules that have unmuted, unresolved detections",
                    "data_type": "boolean"
                },
                "severity": {
                    "description": "Filter by severity: high, moderate, low",
                    "data_type": "string",
                    "value_list": ["high","moderate","low"]
                },
                "confidence": {
                    "description": "Filter by confidence: high, moderate, low",
                    "data_type": "string",
                    "value_list": ["high","moderate","low"]
                },
                "category": {
                    "description": "Category to filter by",
                    "data_type": "string",
                    "value_list": [
                        "Attack:Command and Control",
                        "Attack:Exploitation",
                        "Attack:Exfiltration",
                        "Attack:Installation",
                        "Attack:Lateral Movement",
                        "Attack:Infection Vector",
                        "Attack:Miscellaneous",
                        "Miscellaneous",
                        "Posture:Anomalous Activity",
                        "Posture:Insecure Configuration",
                        "Posture:Potentially Unauthorized Software or Device",
                        "Posture:Miscellaneous",
                        "PUA:Adware",
                        "PUA:Spyware",
                        "PUA:Unauthorized Resource Use",
                        "PUA:Miscellaneous"
                    ]
                },
                "rule_account_muted": {
                    "description": "Include muted rules: true / false",
                    "data_type": "boolean"
                },
                "enabled": {
                    "description": "Enabled rules only",
                    "data_type": "boolean"
                },
                "sort_by": {
                    "description": "The field to sort by: created, updated, detections, severity, confidence, category, last_seen, detections_muted. Defaults to updated",
                    "data_type": "string",
                    "value_list": [
                        "created",
                        "updated",
                        "detections",
                        "severity",
                        "confidence",
                        "category",
                        "last_seen",
                        "detections_muted"
                    ]
                },
                "sort_order": {
                    "description": "Sort direction ('asc' vs 'desc')",
                    "data_type": "string",
                    "value_list": ["asc","desc"]
                },
                "offset": {
                    "description": "The number of records to skip past",
                    "data_type": "numeric"
                },
                "limit": {
                    "description": "The number of records to return, default: 100, max: 1000",
                    "data_type": "numeric",
                    "default": 100
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Detection Rules retrieved successfully."
                    ]
                },
                {
                    "data_path": "action_result.data.*.detection_rule.enabled",
                    "data_type": "boolean",
                    "example_values": [
                       "true","false"
                    ],
                    "column_name": "Enabled"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.updated_user_uuid",
                    "data_type": "string",
                    "example_values": [
                       "55f39b72-2622-4137-9051-bc2ff364f059"
                    ],
                    "column_name": "Updated User ID"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.rule_accounts",
                    "data_type": "string",
                    "column_name": "Rule Accounts"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.auto_resolution_minutes",
                    "data_type": "numeric",
                    "example_values": [
                       "10080"
                    ],
                    "column_name": "Resolution Minutes"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.created",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Created"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.account_uuid",
                    "data_type": "string",
                    "example_values": [
                       "55f39b72-2622-4137-9051-bc2ff364f059"
                    ],
                    "column_name": "Account"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.confidence",
                    "data_type": "string",
                    "example_values": [
                       "high","moderate","low"
                    ],
                    "column_name": "Confidence"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.name",
                    "data_type": "string",
                    "example_values": [
                       "AR T1595"
                    ],
                    "column_name": "Name"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.created_user_uuid",
                    "data_type": "string",
                    "example_values": [
                       "55f39b72-2622-4137-9051-bc2ff364f059"
                    ],
                    "column_name": "Created User ID"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.query_signature",
                    "data_type": "string",
                    "example_values": [
                        "ip IN ('1.1.1.1','2.2.2.2') AND event_type = 'dns'"
                    ],
                    "column_name": "Signature"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.shared_account_uuids",
                    "data_type": "string",
                    "example_values": [
                       "55f39b72-2622-4137-9051-bc2ff364f059"
                    ],
                    "column_name": "Shared Accounts"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.rule_accounts",
                    "data_type": "string",
                    "column_name": "Rule Accounts"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.run_account_uuids",
                    "data_type": "string",
                    "example_values": [
                       "[\"55f39b72-2622-4137-9051-bc2ff364f059\"]"
                    ],
                    "column_name": "Run Accounts"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.updated",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Updated"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.uuid",
                    "data_type": "string",
                    "example_values": [
                       "55f39b72-2622-4137-9051-bc2ff364f059"
                    ],
                    "column_name": "Id"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.description",
                    "data_type": "string",
                    "column_name": "Description"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.severity",
                    "data_type": "string",
                    "example_values": [
                       "high","moderate","low"
                    ],
                    "column_name": "Severity"
                },
                {
                    "data_path": "action_result.data.*.detection_rule.category",
                    "data_type": "string",
                    "example_values": [
                       "Attack:Infection Vector"
                    ],
                    "column_name": "Category"
                }
            ],
            "render": {
                "type": "table",
                "width": 18,
                "title": "FortiNDR Get Detections Rules"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "resolve detection",
            "identifier": "fnc_resolve_detection",
            "description": "Resolve a specific detection",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "detection_uuid": {
                    "data_type": "string",
                    "description": "Detection UUID to resolve",
                    "required": true
                },
                "resolution": {
                    "data_type": "string",
                    "description": "Resolution state. Options: true_positive_mitigated, true_positive_no_action, false_positive, unknown'",
                    "required": true,
                    "value_list": [
                        "true_positive_mitigated",
                        "true_positive_no_action",
                        "false_positive",
                        "unknown"
                    ]
                },
                "resolution_comment": {
                    "data_type": "string",
                    "description": "Optional comment for the resolution",
                    "required": false
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Detection resolved successfully."
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "table",
                "width": 0,
                "title": "FortiNDR Resolve Detection"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "get rule events",
            "identifier": "fnc_get_rule_events",
            "description": "Get a list of the events that matched on a specific rule",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "rule_uuid": {
                    "description": "Rule UUID to get events for",
                    "data_type": "string",
                    "required": true
                },
                "account_uuid": {
                    "description": "Account uuid to filter by",
                    "data_type": "string"
                },
                "offset": {
                    "description": "The number of records to skip past",
                    "data_type": "numeric"
                },
                "limit": {
                    "description": "The number of records to return, default: 100, max: 1000",
                    "data_type": "numeric",
                    "default": 100
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Detection Rule Events retrieved successfully."
                    ]
                },
                {
                    "data_path": "action_result.data.*.rule_event.src_ip",
                    "data_type": "string",
                    "example_values": [
                       "8.8.8.8"
                    ],
                    "column_name": "Src IP"
                },
                {
                    "data_path": "action_result.data.*.rule_event.dst_ip",
                    "data_type": "string",
                    "example_values": [
                       "9.9.9.9"
                    ],
                    "column_name": "Dest IP"
                },
                {
                    "data_path": "action_result.data.*.rule_event.src_port",
                    "data_type": "numeric",
                    "example_values": [
                       "53"
                    ],
                    "column_name": "Src Port"
                },
                {
                    "data_path": "action_result.data.*.rule_event.dst_port",
                    "data_type": "numeric",
                    "example_values": [
                       "32"
                    ],
                    "column_name": "Dst Port"
                },
                {
                    "data_path": "action_result.data.*.rule_event.host_domain",
                    "data_type": "string",
                    "column_name": "Host Domain"
                },
                {
                    "data_path": "action_result.data.*.rule_event.flow_id",
                    "data_type": "string",
                    "example_values": [
                       "Cpv6xc2a3gA6fA8WE"
                    ],
                    "column_name": "Flow ID"
                },
                {
                    "data_path": "action_result.data.*.rule_event.event_type",
                    "data_type": "string",
                    "example_values": [
                       "dns"
                    ],
                    "column_name": "Event Type"
                },
                {
                    "data_path": "action_result.data.*.rule_event.sensor_id",
                    "data_type": "string",
                    "example_values": [
                       "sen1"
                    ],
                    "column_name": "Sensor ID"
                },
                {
                    "data_path": "action_result.data.*.rule_event.timestamp",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Timestamp"
                },
                {
                    "data_path": "action_result.data.*.rule_event.customer_id",
                    "data_type": "string",
                    "example_values": [
                       "gig"
                    ],
                    "column_name": "Customer Id"
                },
                {
                    "data_path": "action_result.data.*.rule_event.uuid",
                    "data_type": "string",
                    "example_values": [
                       "a7015381-0484-11ee-a43f-067ff9e63f5b"
                    ],
                    "column_name": "Event Id"
                }
            ],
            "render": {
                "type": "table",
                "width": 11,
                "title": "FortiNDR Get Rule Events"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "get detection events",
            "identifier": "fnc_get_detection_events",
            "description": "Get a list of the events associated with a specific detection",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "detection_uuid": {
                    "description": "Detection uuid to filter by",
                    "data_type": "string",
                    "required": true
                },
                "offset": {
                    "description": "The number of records to skip past",
                    "data_type": "numeric"
                },
                "limit": {
                    "description": "The number of records to return, default: 100, max: 1000",
                    "data_type": "numeric",
                    "default": 100
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Detection Events retrieved successfully."
                    ]
                },
                {
                    "data_path": "action_result.data.*.detection_events.*.src_ip",
                    "data_type": "string",
                    "example_values": [
                       "8.8.8.8"
                    ],
                    "column_name": "Src IP"
                },
                {
                    "data_path": "action_result.data.*.detection_events.*.dst_ip",
                    "data_type": "string",
                    "example_values": [
                       "9.9.9.9"
                    ],
                    "column_name": "Dest IP"
                },
                {
                    "data_path": "action_result.data.*.detection_events.*.src_port",
                    "data_type": "numeric",
                    "example_values": [
                       "53"
                    ],
                    "column_name": "Src Port"
                },
                {
                    "data_path": "action_result.data.*.detection_events.*.dst_port",
                    "data_type": "numeric",
                    "example_values": [
                       "32"
                    ],
                    "column_name": "Dst Port"
                },
                {
                    "data_path": "action_result.data.*.detection_events.*.host_domain",
                    "data_type": "string",
                    "column_name": "Host Domain"
                },
                {
                    "data_path": "action_result.data.*.detection_events.*.flow_id",
                    "data_type": "string",
                    "example_values": [
                       "Cpv6xc2a3gA6fA8WE"
                    ],
                    "column_name": "Flow ID"
                },
                {
                    "data_path": "action_result.data.*.detection_events.*.event_type",
                    "data_type": "string",
                    "example_values": [
                       "dns"
                    ],
                    "column_name": "Event Type"
                },
                {
                    "data_path": "action_result.data.*.detection_events.*.sensor_id",
                    "data_type": "string",
                    "example_values": [
                       "sen1"
                    ],
                    "column_name": "Sensor ID"
                },
                {
                    "data_path": "action_result.data.*.detection_events.*.timestamp",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Timestamp"
                },
                {
                    "data_path": "action_result.data.*.detection_events.*.customer_id",
                    "data_type": "string",
                    "example_values": [
                       "gig"
                    ],
                    "column_name": "Customer Id"
                },
                {
                    "data_path": "action_result.data.*.detection_events.*.detection_uuid",
                    "data_type": "string",
                    "example_values": [
                        "a7015381-0484-11ee-a43f-067ff9e63f5b"
                    ],
                    "column_name": "Detection Id"
                },
                {
                    "data_path": "action_result.data.*.detection_events.*.rule_uuid",
                    "data_type": "string",
                    "example_values": [
                        "a7015381-0484-11ee-a43f-067ff9e63f5b"
                    ],
                    "column_name": "Rule Id"
                },
                {
                    "data_path": "action_result.data.*.detection_events.*.uuid",
                    "data_type": "string",
                    "example_values": [
                       "a7015381-0484-11ee-a43f-067ff9e63f5b"
                    ],
                    "column_name": "Event Id"
                }
            ],
            "render": {
                "type": "table",
                "width": 13,
                "title": "FortiNDR Get Rule Events"
             },
             "versions": "EQ(*)"
        },
        {
            "action": "create detection rule",
            "identifier": "fnc_create_detection_rule",
            "description": "Create a new detection rule",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "account_uuid": {
                    "data_type": "string",
                    "description": "Account where the rule will be created",
                    "required": true
                },
                "name": {
                    "data_type": "string",
                    "description": "The name of the rule",
                    "required": true
                },
                "category": {
                    "data_type": "string",
                    "description": "The category of the rule",
                    "required": true,
                    "value_list": [
                        "Attack:Command and Control",
                        "Attack:Exploitation",
                        "Attack:Exfiltration",
                        "Attack:Installation",
                        "Attack:Lateral Movement",
                        "Attack:Infection Vector",
                        "Attack:Miscellaneous",
                        "Miscellaneous",
                        "Posture:Anomalous Activity",
                        "Posture:Insecure Configuration",
                        "Posture:Potentially Unauthorized Software or Device",
                        "Posture:Miscellaneous",
                        "PUA:Adware",
                        "PUA:Spyware",
                        "PUA:Unauthorized Resource Use",
                        "PUA:Miscellaneous"
                    ]
                },
                "query_signature": {
                    "data_type": "string",
                    "description": " The IQL query for the rule",
                    "required": true
                },
                "description": {
                    "data_type": "string",
                    "description": "A description for the rule",
                    "required": false
                },
                "severity": {
                    "data_type": "string",
                    "description": "The severity of the rule",
                    "required": true,
                    "value_list": ["high", "moderate", "low"]
                },
                "confidence": {
                    "data_type": "string",
                    "description": "The confidence of the rule",
                    "required": true,
                    "value_list": ["high", "moderate", "low"]
                },
                "primary_attack_id": {
                    "data_type": "string",
                    "description": "Primary Attack ID",
                    "required": false
                },
                "secondary_attack_id": {
                    "data_type": "string",
                    "description": "Secondary Attack ID",
                    "required": false
                },
                "specificity": {
                    "data_type": "string",
                    "description": "Specificity",
                    "required": false
                },
                "device_ip_fields": {
                    "data_type": "string",
                    "description": "List, separated by ',', of the fields to check for impacted devices. Using 'DEFAULT' if not provided",
                    "required": false,
                    "allow_list": true
                },
                "indicator_fields": {
                    "data_type": "string",
                    "description": "List, separated by ',' of the indicator's fields",
                    "required": false,
                    "allow_list": true
                },
                "run_account_uuids": {
                    "data_type": "string",
                    "description": "Account UUIDs on which this rule will run. This will usually be just your own account UUID. (separate multiple accounts by comma)",
                    "required": true,
                    "allow_list": true
                },
                "auto_resolution_minutes": {
                    "data_type": "numeric",
                    "description": "The number of minutes after which detections will be auto-resolved. If 0 then detections have to be manually resolved",
                    "required": false
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Detection Rule created successfully."
                    ]
                },
                {
                    "data_path": "action_result.data.*.rule.uuid",
                    "data_type": "string",
                    "example_values": [
                       "55f39b72-2622-4137-9051-bc2ff364f059"
                    ],
                    "column_name": "Id"
                },
                {
                    "data_path": "action_result.data.*.rule.account_uuid",
                    "data_type": "string",
                    "example_values": [
                       "55f39b72-2622-4137-9051-bc2ff364f059"
                    ],
                    "column_name": "Account"
                },
                {
                    "data_path": "action_result.data.*.rule.shared_account_uuids",
                    "data_type": "string",
                    "example_values": [
                       "55f39b72-2622-4137-9051-bc2ff364f059"
                    ],
                    "column_name": "Shared Accounts"
                },
                {
                    "data_path": "action_result.data.*.rule.run_account_uuids",
                    "data_type": "string",
                    "example_values": [
                       "[\"55f39b72-2622-4137-9051-bc2ff364f059\"]"
                    ],
                    "column_name": "Run Accounts"
                },
                {
                    "data_path": "action_result.data.*.rule.name",
                    "data_type": "string",
                    "example_values": [
                       "AR T1595"
                    ],
                    "column_name": "Name"
                },
                {
                    "data_path": "action_result.data.*.rule.category",
                    "data_type": "string",
                    "example_values": [
                       "Attack:Infection Vector"
                    ],
                    "column_name": "Category"
                },
                {
                    "data_path": "action_result.data.*.rule.query_signature",
                    "data_type": "string",
                    "example_values": [
                        "ip IN ('1.1.1.1','2.2.2.2') AND event_type = 'dns'"
                    ],
                    "column_name": "Signature"
                },
                {
                    "data_path": "action_result.data.*.rule.description",
                    "data_type": "string",
                    "column_name": "Description"
                },
                {
                    "data_path": "action_result.data.*.rule.severity",
                    "data_type": "string",
                    "example_values": [
                       "high","moderate","low"
                    ],
                    "column_name": "Severity"
                },
                {
                    "data_path": "action_result.data.*.rule.confidence",
                    "data_type": "string",
                    "example_values": [
                       "high","moderate","low"
                    ],
                    "column_name": "Confidence"
                },
                {
                    "data_path": "action_result.data.*.rule.auto_resolution_minutes",
                    "data_type": "numeric",
                    "example_values": [
                       "10080"
                    ],
                    "column_name": "Resolution Minutes"
                },
                {
                    "data_path": "action_result.data.*.rule.enabled",
                    "data_type": "boolean",
                    "example_values": [
                       "true","false"
                    ],
                    "column_name": "Enabled"
                },
                {
                    "data_path": "action_result.data.*.rule.created_user_uuid",
                    "data_type": "string",
                    "example_values": [
                       "55f39b72-2622-4137-9051-bc2ff364f059"
                    ],
                    "column_name": "Created User ID"
                },
                {
                    "data_path": "action_result.data.*.rule.created",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Created"
                },
                {
                    "data_path": "action_result.data.*.rule.updated_user_uuid",
                    "data_type": "string",
                    "example_values": [
                       "55f39b72-2622-4137-9051-bc2ff364f059"
                    ],
                    "column_name": "Updated User ID"
                },
                {
                    "data_path": "action_result.data.*.rule.updated",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Updated"
                },
                {
                    "data_path": "action_result.data.*.rule.critical_updated",
                    "data_type": "string",
                    "example_values": [
                       "2019-01-30T00:00:00.000Z"
                    ],
                    "column_name": "Critical Updated"
                },
                {
                    "data_path": "action_result.data.*.rule.primary_attack_id",
                    "data_type": "string",
                    "column_name": "Primary Attack ID"
                },
                {
                    "data_path": "action_result.data.*.rule.secondary_attack_id",
                    "data_type": "string",
                    "column_name": "Secondary Attack ID"
                },
                {
                    "data_path": "action_result.data.*.rule.specificity",
                    "data_type": "string",
                    "column_name": "Specificity"
                },
                {
                    "data_path": "action_result.data.*.rule.rule_accounts",
                    "data_type": "string",
                    "column_name": "Rule Accounts"
                },
                {
                    "data_path": "action_result.data.*.rule.device_ip_fields",
                    "data_type": "string",
                    "example_values": [
                       "DEFAULT"
                    ],
                    "column_name": "Device IP Fields"
                },
                {
                    "data_path": "action_result.data.*.rule.indicator_fields",
                    "data_type": "string",
                    "example_values": [
                       "src.ip"
                    ],
                    "column_name": "Indicator Fields"
                },
                {
                    "data_path": "action_result.data.*.rule.source_excludes",
                    "data_type": "string",
                    "example_values": [
                       "Zscaler"
                    ],
                    "column_name": "Source Excludes"
                }
            ],
            "render": {
                "type": "table",
                "width": 0,
                "title": "FortiNDR Create Detection Rule"
             },
             "versions": "EQ(*)"
        }
    ],
    "pip3_dependencies": {
        "pypi": [
            {
                "module": "beautifulsoup4"
            },
            {
                "module": "certifi"
            },
            {
                "module": "chardet"
            },
            {
                "module": "idna"
            },
            {
                "module": "pytz"
            },
            {
                "module": "requests"
            },
            {
                "module": "soupsieve"
            },
            {
                "module": "urllib3"
            },
            {
                "module": "dateparser"
            },
            {
                "module": "regex"
            }
        ]
    },
    "pip_dependencies": {
        "pypi": [
            {
                "module": "beautifulsoup4"
            },
            {
                "module": "certifi"
            },
            {
                "module": "chardet"
            },
            {
                "module": "idna"
            },
            {
                "module": "pytz"
            },
            {
                "module": "requests"
            },
            {
                "module": "soupsieve"
            },
            {
                "module": "urllib3"
            },
            {
                "module": "dateparser"
            },
            {
                "module": "regex"
            }
        ]
    },
    "fips_compliant": true,
    "latest_tested_versions": [""],
    "directory": "fortindrcloud_bb31bf87-e183-44e8-b641-a2006252517b",
    "version": 1,
    "appname": "-",
    "executable": "spawn3",
    "disabled": false,
    "copied_from_id": 163,
    "copied_from_version": "2.0.15",
    "custom_made": true
}
